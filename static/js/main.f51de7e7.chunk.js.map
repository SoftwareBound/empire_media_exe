{"version":3,"sources":["common/urls/url.js","redux/actions/actionType.js","redux/actions/timestampVarActions.js","common/titles/timestamp.js","redux/actions/timestampActions.js","common/components/Button.js","common/titles/headlines.js","Timestamps.js","Chart.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/timestampReducer.js","redux/reducers/timestampVarsReducer.js","redux/store.js","index.js"],"names":["url","urlComplements","timestampActions","timestampVarsActions","setTimestampVars","timeVars","type","vars","timeFigure","timeWords","getDataByTimestamp","period","percision","dispatch","a","axios","get","stockData","loadDataToStore","data","alert","Button","btn_name","btn_value","useDispatch","className","onClick","headlines","buttonHeadlines","chartTitles","Timestamps","Chart","useState","tickIntervalVar","setTickIntervalVar","tickVar","useSelector","state","timestampVarsReducer","useEffect","toString","options","title","text","xAxis","tickInterval","yAxis","legend","enabled","series","name","map","dat","Date","getTime","Close","highcharts","Highcharts","App","timestampReducer","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f51de7e7.chunk.js","sourcesContent":["export const url = {\r\n  MAIN_URL: `https://www.fxempire.com/api/v1/en/stocks/chart/candles?Identifier=AAPL.XNAS&IdentifierType=Symbol&AdjustmentMethod=All&IncludeExtended=False&period=`,\r\n};\r\n\r\nexport const urlComplements = {\r\n  AFTER_PERIOD: `&Precision=`,\r\n  AFTER_PERCISION: `&StartTime=8/28/2020%2016:0&EndTime=9/4/2020%2023:59&_fields=ChartBars.StartDate,ChartBars.High,ChartBars.Low,ChartBars.StartTime,ChartBars.Open,ChartBars.Close,ChartBars.Volume`,\r\n};\r\n","export const timestampActions = { LOAD_STOCK_DATA: \"LOAD_STOCK_DATA\" };\r\n\r\nexport const timestampVarsActions = {\r\n  SET_TIMESTAMP_VARS: \"SET_TIMESTAMP_VARS\",\r\n};\r\n","import { timestampVarsActions } from \"./actionType\";\r\n\r\nexport function setTimestampVars(timeVars) {\r\n  return {\r\n    type: timestampVarsActions.SET_TIMESTAMP_VARS,\r\n    vars: timeVars,\r\n  };\r\n}\r\n","export const timeFigure = { ONE: 1, FIVE: 5, WEEK_IN_HOURS: 168 };\r\nexport const timeWords = { MINUTES: \"Minutes\", HOURS: \"Hours\" };\r\n","import axios from \"axios\";\r\nimport { url, urlComplements } from \"../../common/urls/url\";\r\nimport { timestampActions } from \"./actionType\";\r\nimport { setTimestampVars } from \"./timestampVarActions\";\r\nimport { timeFigure, timeWords } from \"../../common/titles/timestamp\";\r\n\r\nexport function getDataByTimestamp(\r\n  period = timeFigure.FIVE,\r\n  percision = timeWords.MINUTES\r\n) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const stockData = await axios.get(\r\n        `${url.MAIN_URL}${period}${urlComplements.AFTER_PERIOD}${percision}${urlComplements.AFTER_PERCISION}`\r\n      );\r\n\r\n      dispatch(loadDataToStore(stockData.data));\r\n      dispatch(setTimestampVars({ period: period, percision: percision }));\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n}\r\n\r\nexport function loadDataToStore(data) {\r\n  return { type: timestampActions.LOAD_STOCK_DATA, data: data };\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getDataByTimestamp } from \"../../redux/actions/timestampActions\";\r\nconst Button = ({ btn_name, btn_value }) => {\r\n  const dispatch = useDispatch();\r\n  const getDataByTime = () => {\r\n    dispatch(getDataByTimestamp(btn_value.period, btn_value.percision));\r\n  };\r\n  return (\r\n    <div className=\"col\">\r\n      <button\r\n        className=\" timestamp_btn btn btn-primary\"\r\n        onClick={getDataByTime}\r\n      >\r\n        {btn_name}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const headlines = {\r\n  MAIN_TITLE: \"Apple Inc. Stocks\",\r\n};\r\n\r\nexport const buttonHeadlines = {\r\n  ONE_MINUTE: \"1 Minutes\",\r\n  FIVE_MINUTE: \"5 Minutes\",\r\n  ONE_HOUR: \"1 Hour\",\r\n  ONE_WEEK: \"1 Week\",\r\n};\r\n\r\nexport const chartTitles = {\r\n  Y_TITLE: \"Stock Price\",\r\n  SERIES_TITLE: \"Close Price\",\r\n};\r\n","import React from \"react\";\r\nimport Button from \"./common/components/Button\";\r\nimport { buttonHeadlines } from \"./common/titles/headlines\";\r\nimport \"./style.css\";\r\nimport { timeFigure, timeWords } from \"./common/titles/timestamp\";\r\nconst Timestamps = () => {\r\n  return (\r\n    <div className=\"row timestamp_container \">\r\n      <Button\r\n        btn_name={buttonHeadlines.ONE_MINUTE}\r\n        btn_value={{ period: timeFigure.ONE, percision: timeWords.MINUTES }}\r\n      />\r\n      <Button\r\n        btn_name={buttonHeadlines.FIVE_MINUTE}\r\n        btn_value={{ period: timeFigure.FIVE, percision: timeWords.MINUTES }}\r\n      />\r\n      <Button\r\n        btn_name={buttonHeadlines.ONE_HOUR}\r\n        btn_value={{ period: timeFigure.ONE, percision: timeWords.HOURS }}\r\n      />\r\n      <Button\r\n        btn_name={buttonHeadlines.ONE_WEEK}\r\n        btn_value={{\r\n          period: timeFigure.WEEK_IN_HOURS,\r\n          percision: timeWords.HOURS,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timestamps;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { timeFigure, timeWords } from \"./common/titles/timestamp\";\r\nimport { headlines, chartTitles } from \"./common/titles/headlines\";\r\nconst Chart = ({ stockData }) => {\r\n  const [tickIntervalVar, setTickIntervalVar] = useState(4);\r\n  const tickVar = useSelector((state) => state.timestampVarsReducer);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      tickVar.period === timeFigure.ONE &&\r\n      tickVar.percision.toString() === timeWords.MINUTES\r\n    ) {\r\n      setTickIntervalVar(4);\r\n    }\r\n    if (\r\n      tickVar.period === timeFigure.FIVE &&\r\n      tickVar.percision.toString() === timeWords.MINUTES\r\n    ) {\r\n      setTickIntervalVar(6);\r\n    }\r\n    if (\r\n      tickVar.period === timeFigure.ONE &&\r\n      tickVar.percision.toString() === timeWords.HOURS\r\n    ) {\r\n      setTickIntervalVar(12);\r\n    }\r\n    if (\r\n      tickVar.period === timeFigure.WEEK_IN_HOURS &&\r\n      tickVar.percision.toString() === timeWords.HOURS\r\n    ) {\r\n      setTickIntervalVar(24);\r\n    }\r\n  }, [tickVar]);\r\n  const options = {\r\n    title: { text: headlines.MAIN_TITLE },\r\n    xAxis: {\r\n      tickInterval: tickIntervalVar * 3600 * 1000,\r\n      type: \"datetime\",\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: chartTitles.Y_TITLE,\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      enabled: false,\r\n    },\r\n    series: [\r\n      {\r\n        name: chartTitles.SERIES_TITLE,\r\n        data: stockData.map((dat) => [new Date(dat.Date).getTime(), dat.Close]),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <HighchartsReact highcharts={Highcharts} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Timestamps from \"./Timestamps\";\nimport Chart from \"./Chart\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getDataByTimestamp } from \"./redux/actions/timestampActions\";\nimport React, { useEffect } from \"react\";\nimport { timeFigure, timeWords } from \"./common/titles/timestamp\";\n\nconst App = () => {\n  const data = useSelector((state) => state.timestampReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!data.length) {\n      dispatch(getDataByTimestamp(timeFigure.FIVE, timeWords.MINUTES));\n    }\n  }, []);\n  return (\n    <div className=\"container\">\n      <Timestamps />\n      <Chart stockData={data} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { timestampReducer } from \"./timestampReducer\";\r\nimport { timestampVarsReducer } from \"./timestampVarsReducer\";\r\n\r\nexport default combineReducers({\r\n  timestampReducer,\r\n  timestampVarsReducer,\r\n});\r\n","import { timestampActions } from \"../actions/actionType\";\r\nexport function timestampReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case timestampActions.LOAD_STOCK_DATA:\r\n      return [...action.data];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { timestampVarsActions } from \"../actions/actionType\";\r\n\r\nexport function timestampVarsReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case timestampVarsActions.SET_TIMESTAMP_VARS:\r\n      return action.vars;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}